name: ci-swift

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - master

jobs:
  build-libs:
    runs-on: namespace-profile-default
    container: swift:5.10-focal
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: build duet
        run: cd libs-swift/duet && swift build
      - name: build x-http
        run: cd libs-swift/x-http && swift build
      - name: build x-kit
        run: cd libs-swift/x-kit && swift build
      - name: build x-postmark
        run: cd libs-swift/x-postmark && swift build
      - name: build x-slack
        run: cd libs-swift/x-slack && swift build
      - name: build x-stripe
        run: cd libs-swift/x-stripe && swift build

  test-libs:
    runs-on: namespace-profile-default
    container: swift:5.10-focal
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: test duet
        run: cd libs-swift/duet && swift test
      - name: test x-http
        run: cd libs-swift/x-http && swift test
      - name: test x-kit
        run: cd libs-swift/x-kit && swift test
      - name: test x-slack
        run: cd libs-swift/x-slack && swift test

  build-api:
    runs-on: namespace-profile-default
    container: swift:5.10-focal
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: apps/api/.build
          key: api-build-${{ hashFiles('api/Package.resolved') }}
          restore-keys: api-build-
      - name: meta
        id: meta
        uses: friends-library/dev/actions/ts-pack/actions/meta@master
        with:
          github_token: ${{ github.token }}
      - name: set-env-vars
        run: |
          DATESTR=$(TZ=America/New_York date +'%Y.%m.%d_%H.%M')
          SHORTSHA=${{ steps.meta.outputs.latest_commit_sha_short }}
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            API_ENV=production
            echo "SRCDIR=apps/api/.build/release" >> $GITHUB_ENV
            echo "DESTDIR=builds/production"      >> $GITHUB_ENV
            echo "CONFIGURATION=release"          >> $GITHUB_ENV
          else
            API_ENV=staging
            echo "SRCDIR=apps/api/.build/debug" >> $GITHUB_ENV
            echo "DESTDIR=builds/staging"       >> $GITHUB_ENV
            echo "CONFIGURATION=debug"          >> $GITHUB_ENV
          fi
          echo "FILENAME=api_${API_ENV}_${DATESTR}_${SHORTSHA}" >> $GITHUB_ENV
      - name: build-api
        run: |
          cd apps/api && swift build --static-swift-stdlib -c $CONFIGURATION
          cd ../../ && cp ${SRCDIR}/Run ${FILENAME}
      - name: scp-bin
        uses: appleboy/scp-action@v0.1.7
        with:
          host: api.friendslibrary.com
          username: ${{ secrets.API_SERVER_SSH_USER }}
          key: ${{ secrets.API_SERVER_SSH_KEY }}
          source: '${{ env.FILENAME }}'
          target: '${{ env.DESTDIR }}'
      - name: ssh-tasks
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: api.friendslibrary.com
          username: ${{ secrets.API_SERVER_SSH_USER }}
          key: ${{ secrets.API_SERVER_SSH_KEY }}
          envs: DESTDIR,FILENAME
          script: |
            ln -sf "./${FILENAME}" "${DESTDIR}/latest"
            chmod +x "${DESTDIR}/${FILENAME}" "${DESTDIR}/latest"
            cd ~/builds/production && ls -r api_* | grep -v $(basename $(readlink -f current)) | tail -n +11 | xargs rm
            cd ~/builds/staging && ls -r api_* | tail -n  +6 | xargs rm
            pm2 restart staging > /dev/null

  test-api:
    runs-on: namespace-profile-default
    container: swift:5.10-focal
    env:
      DATABASE_HOST: postgres
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: vapor_username
          POSTGRES_PASSWORD: vapor_password
          POSTGRES_DB: vapor_database
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: apps/api/.build
          key: api-test-${{ hashFiles('api/Package.resolved') }}
          restore-keys: api-test-
      - name: test api
        run: cd apps/api && swift test

env:
  SWIFT_DETERMINISTIC_HASHING: 1
  DATABASE_HOST: postgres
  DATABASE_NAME: vapor_database
  DATABASE_USERNAME: vapor_username
  DATABASE_PASSWORD: vapor_password
  TEST_DATABASE_NAME: vapor_database
  PG_DUMP_PATH: not-real
  POSTMARK_API_KEY: not-real
  SLACK_API_TOKEN_WORKSPACE_MAIN: not-real
  SLACK_API_TOKEN_WORKSPACE_BOT: not-real
  CLOUD_STORAGE_BUCKET_URL: /not-real
  LULU_API_ENDPOINT: not-real
  LULU_CLIENT_KEY: not-real
  LULU_CLIENT_SECRET: not-real
  LULU_PHONE_NUMBER: not-real
  STRIPE_PUBLISHABLE_KEY: not-real
  STRIPE_SECRET_KEY: not-real
  JARED_CONTACT_FORM_EMAIL: not-real
  JASON_CONTACT_FORM_EMAIL: not-real
  PARSE_USERAGENT_BIN: not-real
  NODE_BIN: not-real
  LOCATION_API_KEY: not-real
  MAPBOX_API_KEY: not-real
  SELF_URL: /not-real
  WEBSITE_URL_EN: /not-real
  WEBSITE_URL_ES: /not-real

concurrency:
  group: ${{ github.ref }}-ci-swift
  cancel-in-progress: true
