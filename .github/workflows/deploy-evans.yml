name: deploy-evans

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize]

jobs:
  build-en:
    name: build-en
    runs-on: ubuntu-latest
    outputs:
      deploy_url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: setup ts
        uses: ./.github/actions/setup-ts
      - name: clone-friend-repos
        run: pnpm ts-node ./libs-ts/friend-repos/src/cli-clone.ts apps/evans
      - name: build
        run: cd apps/evans && just build-en
      - name: deploy
        id: deploy
        uses: friends-library/dev/actions/ts-pack/actions/deploy@master
        with:
          netlify_api_token: ${{ secrets.NETLIFY_API_TOKEN }}
          site_id: ${{ secrets.EVANS_DEPLOY_SITE_ID_EN }}
          build_dir: apps/evans/public
          github_token: ${{ github.token }}

  build-es:
    name: build-es
    runs-on: ubuntu-latest
    outputs:
      deploy_url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: setup ts
        uses: ./.github/actions/setup-ts
      - name: clone-friend-repos
        run: pnpm ts-node ./libs-ts/friend-repos/src/cli-clone.ts apps/evans
      - name: build
        # avoid 401 errors in api from both jobs making expensive simultaneous requests
        run: sleep 30 && cd apps/evans && just build-es
      - name: deploy
        id: deploy
        uses: friends-library/dev/actions/ts-pack/actions/deploy@master
        with:
          netlify_api_token: ${{ secrets.NETLIFY_API_TOKEN }}
          site_id: ${{ secrets.EVANS_DEPLOY_SITE_ID_ES }}
          build_dir: apps/evans/public
          github_token: ${{ github.token }}

  comment:
    name: comment
    runs-on: ubuntu-latest
    needs: [build-en, build-es]
    if: github.ref != 'refs/heads/master'
    steps:
      - name: deploy-comment
        uses: thollander/actions-comment-pull-request@v2
        env:
          EN_URL: ${{ needs.build-en.outputs.deploy_url }}
          ES_URL: ${{ needs.build-es.outputs.deploy_url }}
        with:
          comment_tag: deploy-previews
          message: |
            Deploy previews:
            - English: [${{ env.EN_URL }}](${{ env.EN_URL }})
            - Spanish: [${{ env.ES_URL }}](${{ env.ES_URL }})

concurrency:
  group: ${{ github.ref }}-deploy-evans
  cancel-in-progress: true

env:
  CLOUD_STORAGE_BUCKET_URL: ${{ secrets.CLOUD_STORAGE_BUCKET_URL }}
  GATSBY_ALGOLIA_APP_ID: ${{ secrets.GATSBY_ALGOLIA_APP_ID }}
  ALGOLIA_ADMIN_KEY: ${{ secrets.ALGOLIA_ADMIN_KEY }}
  FLP_API_TOKEN_STAGING: ${{ secrets.FLP_API_TOKEN_STAGING }}
  FLP_API_TOKEN_PROD: ${{ secrets.FLP_API_TOKEN_PROD }}
  GATSBY_ALGOLIA_SEARCH_ONLY_KEY: ${{ secrets.GATSBY_ALGOLIA_SEARCH_ONLY_KEY }}
  GATSBY_TEST_STRIPE_PUBLISHABLE_KEY: ${{ secrets.GATSBY_TEST_STRIPE_PUBLISHABLE_KEY }}
  GATSBY_PROD_STRIPE_PUBLISHABLE_KEY: ${{ secrets.GATSBY_PROD_STRIPE_PUBLISHABLE_KEY }}
  GATSBY_FLP_API_ENDPOINT_PROD: ${{ secrets.GATSBY_FLP_API_ENDPOINT_PROD }}
  GATSBY_FLP_API_ENDPOINT_STAGING: ${{ secrets.GATSBY_FLP_API_ENDPOINT_STAGING }}
  DOCS_REPOS_ROOT: ${{ github.workspace }}/apps/evans
  DEPLOYING: true
  GATSBY_NETLIFY_CONTEXT:
    ${{ github.ref == 'refs/heads/master' && 'production' || 'preview'}}
