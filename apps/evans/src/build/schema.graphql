type Document implements Node {
  altLanguageUrl: String
  editions: [Edition!]!
  originalTitle: String
}

type Edition @dontInfer {
  id: String!
  description: String
  audio: Audio
  customCode: CustomCode!
  type: String!
  isbn: String!
  path: String!
  paperbackCoverBlurb: String!
  numChapters: Int!
  friendSlug: String!
  documentSlug: String!
  printSize: String!
  pages: [Int!]!
  price: Int!
  editor: String
  splits: [Int!]
  downloadUrl: EditionDownloadUrl!
  publishedTimestamp: Int!
  publishedDate: String!
}

type EditionDownloadUrl {
  web_pdf: String!
  mobi: String!
  epub: String!
  speech: String!
}

type Audio {
  reader: String!
  added: String!
  complete: Boolean!
  duration: String!
  publishedDate: String!
  publishedTimestamp: Int!
  parts: [AudioPart!]!
  m4bUrlHq: String!
  m4bUrlLq: String!
  mp3ZipUrlHq: String!
  mp3ZipUrlLq: String!
  m4bFilesizeHq: String!
  m4bFilesizeLq: String!
  mp3ZipFilesizeHq: String!
  mp3ZipFilesizeLq: String!
  podcastUrlHq: String!
  podcastUrlLq: String!
  externalPlaylistIdHq: Int
  externalPlaylistIdLq: Int
}

type AudioPart {
  externalIdHq: Int!
  externalIdLq: Int!
  title: String!
  chapters: [Int!]!
}

type CustomCode {
  css: CustomCodeFiles!
  html: CustomCodeFiles!
}

type CustomCodeFiles {
  paperback_interior: String @proxy(from: "paperback-interior")
  paperback_cover: String @proxy(from: "paperback-cover")
  all: String
  pdf: String
}
